{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os \n",
    "\n",
    "def loadupdress():\n",
    "    idx = 0\n",
    "    dict ={}\n",
    "    with open('updress_list.csv') as f:\n",
    "        for line in f.readlines():\n",
    "            dict[line.strip()] = idx\n",
    "            idx+=1\n",
    "    \n",
    "    return dict\n",
    "\n",
    "def loaddowndress():\n",
    "    idx = 0\n",
    "    dict ={}\n",
    "    with open('downdress_list.csv') as f:\n",
    "        for line in f.readlines():\n",
    "            dict[line.strip()] = idx\n",
    "            idx+=1\n",
    "        \n",
    "    \n",
    "    return dict\n",
    "      \n",
    "rec_lines =[]\n",
    "fout= open(\"attribute_test.lst\",'w')\n",
    "\n",
    "with open('attr_label_test.json') as f:\n",
    "    idx = 0\n",
    "    updress_dic = loadupdress()\n",
    "    downdress_dic = loaddowndress()    \n",
    "    for line in f.readlines():\n",
    "        import json\n",
    "        dict = json.loads(line)\n",
    "        img_path = dict['image_path']\n",
    "        rec_line = '%d\\t' % idx\n",
    "        if 'gender' in dict:\n",
    "            if 'male' == dict['gender']:\n",
    "                rec_line +='%f\\t' % 0\n",
    "            else:\n",
    "                rec_line +='%f\\t' % 1\n",
    "                \n",
    "        if 'hat' in dict:\n",
    "            if 'no' == dict['hat']:\n",
    "                rec_line +='%f\\t' % 0\n",
    "            else:\n",
    "                rec_line +='%f\\t' % 1  \n",
    "        \n",
    "        if 'bag' in dict:\n",
    "            if 'no' == dict['bag']:\n",
    "                rec_line +='%f\\t' % 0\n",
    "            else:\n",
    "                rec_line +='%f\\t' % 1 \n",
    "                \n",
    "        if 'handbag' in dict:\n",
    "            if 'no' == dict['handbag']:\n",
    "                rec_line +='%f\\t' % 0\n",
    "            else:\n",
    "                rec_line +='%f\\t' % 1  \n",
    "                \n",
    "        if 'backpack' in dict:\n",
    "            if 'no' == dict['backpack']:\n",
    "                rec_line +='%f\\t' % 0\n",
    "            else:\n",
    "                rec_line +='%f\\t' % 1  \n",
    "                \n",
    "        if 'updress' in dict:\n",
    "            rec_line +='%f\\t' % updress_dic[dict['updress']]\n",
    "        else:\n",
    "            rec_line +='%f\\t' % updress_dic['unknown']\n",
    "            \n",
    "        if 'downdress' in dict:\n",
    "            rec_line +='%f\\t' % downdress_dic[dict['downdress']]\n",
    "        else:\n",
    "            rec_line +='%f\\t' % downdress_dic['unknown']\n",
    "        \n",
    "        idx+=1\n",
    "        rec_line += '%s\\n' % img_path\n",
    "        rec_lines.append(rec_line)\n",
    "\n",
    "import random\n",
    "random.shuffle(rec_lines)\n",
    "      \n",
    "        \n",
    "for rec_line in rec_lines:        \n",
    "    fout.write(rec_line)\n",
    "        # print(rec_line)\n",
    "fout.close()\n",
    "                "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
